{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","index","ReactDOM","render","document","getElementById"],"mappings":"mMAGe,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EAGfC,mBAAS,mBAHM,mBAG5CC,EAH4C,KAGhCC,EAHgC,KAqBnD,OACI,8BACI,sBACIC,SAdS,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC/CN,EAAc,MAQd,SAGI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,mCCVlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,yFAE2EC,UAAUH,GAFrF,sBAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAACC,GACpB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAZtB,kBAgBZM,GAhBY,4CAAH,sDCEL,SAASO,EAAT,GAAyC,EAAlBJ,GAAmB,IAAfC,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IAG7C,OACI,sBAAKc,UAAU,oEAAf,UACI,qBACIC,IAAKf,EACLgB,IAAKN,IAGT,4BAAIA,OCLT,IAAMO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECJX,SAACA,GAAa,MAGZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IALyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KA6BtC,OAnBAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAM,SAAAC,GAEHC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEf,UAGX,IAMIC,EDtBwBM,CAAa3B,GAAhCa,EAHuB,EAG5BN,KAAaa,EAHe,EAGfA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,+DAAd,SAA8EhB,IAE5EoB,GAAW,mBAAGJ,UAAU,8DAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAACK,EAAD,eAEQL,GADCA,EAAIC,aEoBtBiB,EAtCM,WAAM,MAIa1C,mBAAS,CAAC,cAJvB,mBAIhBQ,EAJgB,KAIJT,EAJI,KAavB,OACI,qCACI,8CAEA,cAACD,EAAD,CAAaC,cAAgBA,IAE7B,uBAIA,6BAEQS,EAAWe,KAAK,SAACT,EAAU6B,GAAX,OACZ,cAAC,EAAD,CACI7B,SAAUA,GACLA,Y,MCzBjC8B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6dfd6d9b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function AddCategory( {setCategories} ) {\r\n    \r\n    //Variables\r\n    const [inputValue, setInputValue] = useState('Nueva Categoria');\r\n\r\n    //Funciones\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( (categories) => [inputValue, ...categories]  );\r\n            setInputValue('');\r\n        }\r\n            \r\n    }\r\n\r\n        \r\n    return (\r\n        <div>\r\n            <form\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n        \r\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=ZrvnaHogNgrjiwxWqiJJmQdppGapPHEg&q=${encodeURI(category)}&limit=10`;\r\n\r\n    const resp = await fetch( url );\r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( (img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        };\r\n    });\r\n    //console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport default function GifGridItem( {id, title, url} ) {\r\n\r\n     //console.log({id, title, url})\r\n    return (\r\n        <div className='card animate__animated animate__animate__fadeIn animate__delay-5s'>\r\n            <img\r\n                src={url}\r\n                alt={title}\r\n            />\r\n\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    //Variables\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    //console.log(data);\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__animate__fadeIn animate__delay-5s'>{category}</h3>\r\n\r\n            { loading && <p className='animate__animated animate__animate__flash animate__delay-5s'>Loading...</p> }\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map( img => \r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        /> )                \r\n                }\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    //Variables\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    //Funciones\r\n    //console.log(category);\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n\r\n                setTimeout(() => {\r\n\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                },4000);\r\n\r\n            });\r\n    }, []);//Para que se ejecute una sola vez // Si la ategory cambia vuelvo y hace el efecto si el array[] esta vacio lo hace una sola vez\r\n\r\n\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","import { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //Variables\r\n    // const [categories, setCategories] = useState(['One Punch', 'Samurai X', 'Dragon Ball']);\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    //Fin Variables\r\n\r\n    //Funciones\r\n    //const handleAdd = () => setCategories( [...categories, 'Nueva Categoria'] );\r\n    //Fin Funciones\r\n\r\n    //Retorno\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories={ setCategories } />\r\n\r\n            <hr></hr>\r\n\r\n            \r\n            \r\n            <ul>\r\n                {\r\n                    categories.map( (category, index) => \r\n                        <GifGrid \r\n                            category={category} \r\n                            key={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ul>\r\n        </>\r\n    );\r\n    //Fin Retorno\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp.js';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n//Tarea\n//Crear un component GifExpertApp\n//<h2>gIFeXPERTaPP</h2>\n//<HR>"],"sourceRoot":""}